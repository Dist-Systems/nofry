#!/bin/bash

#######################################
# Cuts power to all outlets that match the (required parameter) group
#
# Globals:
#    None
# Arguments:
#    $group_string (criticality)
# Returns: 
#    None
# 
# Short Description: When passed the correct arguement,
#                    this script will query the database 
#                    for all such outlets and turn them 
#                    off.
#
#######################################

source $(dirname $0)/lib/killbot.conf
source $(dirname $0)/lib/powerstrip_utilities.sh

#######################################
SCRIPT_USER=logname

usage() { echo "Usage: $0 [-s <NC|C2|UN>]" 1>&2; exit 1; }

while getopts ":s:" o; do
    case "${o}" in
        s)
            s=${OPTARG}
            ((s == 'NC' || s == 'C2' || s == 'UN' )) || usage
            ;;
        *)
            usage
            ;;
    esac
done
shift $((OPTIND-1))

if [ -z "${s}" ]; then
    usage
else
         
  # Gathering the data
  rows=$(sqlite3 ${DB_NAME} "SELECT * FROM outlet_info WHERE criticality='${s}'")
  row_count=$(sqlite3 ${DB_NAME} "SELECT count(*) FROM outlet_info WHERE criticality='${s}'")
  
  # Prompting the user before continuing
  echo "Using ${DB_NAME}"
  echo "    this will affect ${row_count} outlets, continue? [y/N]" 
  read CONTINUE
  if [[ ${CONTINUE} == 'y' ]]; then
      echo "continuing..."
      logger "[`basename $0`] started by ${SCRIPT_USER} begin cutting power to ${row_count} [${s}] outlets..." 
  else
      echo "quitting!"
      exit
  fi

  # For each row
  for row in $rows; do
      # Parsing data (sqlite3 returns a pipe separated string)
      id=$(echo $row | awk '{split($0,a,"|"); print a[1]}')
      name=$(echo $row | awk '{split($0,a,"|"); print a[2]}')
      ip=$(echo $row | awk '{split($0,a,"|"); print a[3]}')
      tipe=$(echo $row | awk '{split($0,a,"|"); print a[4]}')
      bank=$(echo $row | awk '{split($0,a,"|"); print a[5]}')
      outlet=$(echo $row | awk '{split($0,a,"|"); print a[6]}')
      criticality=$(echo $row | awk '{split($0,a,"|"); print a[7]}')
       
      # Printing the data
      #echo -e "\e[4m${id}\e[m) ${name} -> ${ip} -> ${outlet} -> ${bank}" ;
      #echo "${name} ${outlet} ${criticality}";

      $(cut_power ${name} ${outlet} ${bank})
      ret=${?}

      if [ "$bank" -ne "1" ]; then
          echo "Cut power to ${criticality} outlet ${outlet} on bank ${bank} (${name}) - ${ret}"
      else
          echo "Cut power to ${criticality} outlet ${outlet} (${name}) - ${ret}"
      fi
  done
  logger "[`basename $0`] finished cutting power to ${row_count} unconfigured outlets." 
fi
